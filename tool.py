from aiogram import Bot, Dispatcher, types, executor
import sqlite3
from conf import token
from aiogram.types import Message, InputFile, message, CallbackQuery

bot = Bot(token=token, parse_mode="HTML")
dp = Dispatcher(bot)


async def instr_question1_handler(callback_query: CallbackQuery,
                                  callback_data: dict):
    answer = callback_data['answer']
    if answer == 'b':
        await callback_query.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!üéä')
    else:
        await callback_query.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.ü§î')


async def instr_question2_handler(callback_query: CallbackQuery,
                                  callback_data: dict):
    answer = callback_data['answer']
    if answer == 'a':
        await callback_query.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!üéä')
    else:
        await callback_query.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.ü§î')


async def instr_question3_handler(callback_query: CallbackQuery,
                                  callback_data: dict):
    answer = callback_data['answer']
    if answer == 'b':
        await callback_query.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!üéä')
    else:
        await callback_query.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.ü§î')


async def instr_question4_handler(callback_query: CallbackQuery,
                                  callback_data: dict):
    answer = callback_data['answer']
    if answer == 'b':
        await callback_query.answer('–ü—Ä–∞–≤–∏–ª—å–Ω–æ!üéä')
    else:
        await callback_query.answer('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.ü§î')


async def structure_command(callback_query: types.CallbackQuery):
    await bot.send_message(callback_query.from_user.id,
                           '–ù–∞—à –∫–æ–ª–ª–µ–¥–∂ —Å—Ç—Ä–µ–º–∏—Ç—Å—è –∫ —Å–æ–∑–¥–∞–Ω–∏—é <u>–±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ–π —Å—Ä–µ–¥—ã</u> –¥–ª—è <b>–≤—Å–µ—Ö</b> ')
